#使用端口
spring.application.name = simpleProject
spring.profiles.active=dev
server.port=8089
#server.tomcat.uri-encoding = UTF-8

#token-random-salt=liugh@123

#设置统一前缀
#server.servlet.context-path=/api/v1
#spring.banner.location=config/my.txt
#controller.scanPackage=com.liugh.controller

##redis数据库的索引，默认为0
#spring.redis.database=0
#spring.redis.host=192.168.211.130
##spring.redis.password=
#spring.redis.port=6379
## Redis服务器连接密码（默认为空）
#spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.jedix.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.jedis.pool.max-wait=-1ms
## 连接池中的最大空闲连接
#spring.redis.jedis.pool.max-idle=8
## 连接池中的最小空闲连接
#spring.redis.jedis.pool.min-idle=0


#mybatis-plus.mapper-locations=classpath:mapper/*Mapper.xml
mybatis.mapper-locations=classpath*:/mapper/**/*.xml
#mybatis-plus.mapper-locations=classpath*:/mapper/**/*.xml

#logging.config=classpath:log4j2-spring.xml

#控制台打印sql开启debug
#logging.level.root = info
#logging.path = logs/
logging.path=D:/other1

#logging.file = yc.log
#logging.level.com.**.**.**.mapper=debug

#数据库打印sql
#logging.level.com.yc.mapper = debug
mybatis-plus.type-aliases-package=com.yc.entity
mybatis-plus.global-config.key-generator=com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
mybatis-plus.global-config.id-type=3
mybatis-plus.global-config.field-strategy=2
#mybatis-plus.global-config.db-column-underline=true
#mybatis-plus.global-config.logic-delete-value=1
#mybatis-plus.global-config.logic-not-delete-value=0
#mybatis-plus.global-config.sql-injector=com.baomidou.mybatisplus.mapper.LogicSqlInjector
#mybatis-plus.global-config.meta-object-handler=com.baomidou.springboot.MyMetaObjectHandler

##rocketMq
#rocket.defaultTopic=DemoTopic
#rocket.defaultTag=323
#rocket.defaultTag1=324
#rocket.transTag=trans
#
##producer
#rocketmq.producer.isOnOff=on
#rocketmq.producer.groupName=${spring.application.name}
#rocketmq.producer.namesrvAddr=192.168.211.128:9876
#rocketmq.producer.maxMessageSize=4096
#rocketmq.producer.sendMsgTimeout=3000
#rocketmq.producer.retryTimesWhenSendFailed=2
#
##consumer
#rocketmq.consumer.isOnOff=on
#rocketmq.consumer.groupName=${spring.application.name}
#rocketmq.consumer.namesrvAddr=192.168.211.128:9876
#rocketmq.consumer.topics=DemoTopic1201
#rocketmq.consumer.consumeThreadMin=20
#rocketmq.consumer.consumeThreadMax=64
#rocketmq.consumer.consumeMessageBatchMaxSize=1

spring.rocketmq.nameServer=192.168.211.128:9876
spring.rocketmq.producer.group=my-group
#rocketmq.producer.retry-times-when-send-failed=2
#rocketmq.producer.retry-times-when-send-async-failed=2

hello.msg=Hi


# Redis数据库索引（默认为0）
#spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.211.130
# Redis服务器连接端口
spring.redis.port=6379  
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
#spring.redis.pool.max-idle=10
# 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
#spring.redis.timeout=1000

spring.data.elasticsearch.cluster-name=192.168.211.130:9200
spring.data.elasticsearch.repositories.enabled=true


app.id=test1
apollo.meta=http://192.168.211.133:8080
apollo.bootstrap.enabled=true
apollo.bootstrap.eagerLoad.enabled=true
logging.level.com.gf.controller=debug


#设置线程池
task.pool.corePoolSize=20
task.pool.maxPoolSize=40
task.pool.keepAliveSeconds=300
task.pool.queueCapacity=50